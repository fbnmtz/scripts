#!/usr/bin/env bash
#
# ############################################################################
# Project: scripts (none)
# File...: ocr
# Created: unknown, 2020
# Author.: @sdushantha, (Siddharth Dushantha)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Monday, 2023/07/24 - 01:09:30
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 1.0.3.45
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  > https://github.com/sdushantha/bin
# ############################################################################
# HISTORY:
#

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
# shellcheck disable=SC1090,SC2154    
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
source ~/bin/xSHELL/init    
use args 
xrequirements tesseract maim xclip-cmd 

xarg --id -n,--no-compositor --var compositor:false --desc "disable compositor (picom)"
xarg --header "extract a text from screen/image with OCR"
xrun --xreject-unknow --xversionrc --xcolors "$@"    

TEXT_FILE="/tmp/ocr.txt"
IMAGE_FILE="/tmp/ocr.png"

# kill compositors
[ -n "$compositor" ] && {
    echo "killing compositors:" 
    echo " '-> picom";   pkill picom; 
    echo " '-> compton"; pkill compton; 
}

# Take screenshot by selecting the area
if ! maim -s "$IMAGE_FILE"; then 
    # If the user pressed the escape key or did something to terminate the proccess
    # taking a screenshot, then just exit
    echo "quit" && exit 1
fi

# Do the magic (∩^o^)⊃━☆ﾟ.*･｡ﾟ
# Notice how I have removing the extension .txt from the file path. This is
# because tesseract adds .txt to the given file path anyways. So if we were to
# specify /tmp/ocr.txt as the file path, tesseract would out the text to 
# /tmp/ocr.txt.txt
tesseract "$IMAGE_FILE" "${TEXT_FILE//\.txt/}"

# Check if the text was detected by checking number
# of lines in the file
LINES=$(wc -l < $TEXT_FILE)
if [ "$LINES" -eq 0 ]; then
    notify-send "ocr" "no text was detected"
    exit 1
fi

# Copy text to clipboard
xclip-cmd --silent < $TEXT_FILE

# Send a notification with the text that was grabbed using OCR
notify-send "ocr" "$(cat $TEXT_FILE)"
