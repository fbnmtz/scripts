#!/usr/bin/env bash
#
# ############################################################################
# Project: scripts (none)
# File...: popcorn
# Created: 2020/03/06 - 19:26:02
# Author.: Fabiano Matos, fgm (fabiano.matoz@gmail.com) 
#        (take idea for another script)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Sunday, 2023/04/09 - 15:39:35
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 1.1.8.208
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  > popcorn (term version)
#        use terminial to watch movies / series.
#        you search for a name, get a list of torrents and select one to watch
#        directly in mpv
# 
# we use two programs
#   * pirateget (finds and downloads torrents from the Pirate Bay)
#   * peerflix (open a magnetlink, download and open video in a given player (mpv))
# ############################################################################
# HISTORY:
#

# shellcheck disable=SC1090        # SC1090: Can't follow non-constant source. Use a directive to specify location.
source ~/bin/xSHELL/init
use args
xrequirements pirate-get peerflix mpv

player=mpv 

xarg --id -s,--search --var search+o --desc "term for search a torrent"
xarg --id -m,--magnet --var magnet+r --desc "magnet link for download"
xarg --id -p,--player --var player+r --desc "set player to watch torrent"

xrun --xversionrc --xrequire-one "$@"

# command to download torrent
_peerflix="peerflix '<link>' --all --list --subtitles --no-quit --$player --"

# no magnet link? perform a search 
if [ -z "$magnet" ]; then
    # shellcheck disable=SC2124     # SC2124: Assigning an array to a string! Assign as array, or use * instead of @ to concatenate.
    # no search? pass all arguments as search
    [ -z "$search" ] && search="$@"
    
    # prepare 'pirete-get/peerflix' command
    _peerflix=${_peerflix//<link>/%s}
    # run command
    _pirateget="pirate-get -C '$_peerflix' '$search'"
    
    echo "$_pirateget" && eval "$_pirateget"
else
    # magnet is a valid link?
    if [[ "$magnet" =~ "magnet:?xt=" ]]; then
        link=${magnet^^}
    else
        # get magnet by folder/file name  
        link="magnet:?xt=urn:btih:${magnet//.torrent}"
    fi
    # prepare 'pirete-get/peerflix' command
    _peerflix=${_peerflix//<link>/${link}}
    # run command
    echo "$_peerflix" && eval "$_peerflix"
fi