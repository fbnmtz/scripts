#!/usr/bin/env bash
#
# ############################################################################
# Project: scripts (none)
# File...: xclip-cmd
# Created: Wednesday, 2021/01/27 - 10:46:26
# Author.: @fbnmtz, (devel.fgm@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Monday, 2025/02/10 - 06:07:44
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.3.0.162
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description:
#  > https://unix.stackexchange.com/questions/61183/bash-script-that-reads-filenames-from-a-pipe-or-from-command-line-args
# ############################################################################
# HISTORY:
#

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
# shellcheck disable=SC1090,SC2154
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~
source "$xSHELL_INIT"
use args
xrequirements "xclip|pbcopy tee"

xarg --id -s,--silent --desc "disable notifications"
xarg --header "clipboard command line for Linux/Darwin"
xrun --xversionrc --xcolors "$@"

case "$(xsys.os)" in
    Linux ) xclip_cmd=xclip  ;;
    Darwin) xclip_cmd=pbcopy ;;
esac

# format an array with received args
#   ex:
#   seq 1 3 | xclip-cmd foo bar baz
#   ARGS=([0]="foo" [1]="bar" [2]="baz" [3]="1" [4]="2" [5]="3")
declare -a ARGS=("$@")
# while read -rt .02 arg; do
while read -r arg; do
    ARGS+=($arg)
done

# join all args to pass everything to xclip
for arg in "${ARGS[@]}"; do
    if [ "$arg" != "--silent" ] && [ "$arg" != "-s" ]; then
        output+="$arg "
    fi
done

# fill all buffers of xclip_cmd
case "$(xsys.os)" in
    Linux ) 
        for sel in primary secondary clipboard; do
            echo -n "$output" | $xclip_cmd -selection $sel
        done
    ;;
    Darwin) echo -n "$output" | $xclip_cmd ;;
esac


# save clipboard history
echo "$output" | tee -a "$APP_HOME"/clipboard

# [ "$xarg" == "s" ] && notify-send "$xclip_cmd" "$output"
