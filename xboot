#!/usr/bin/env bash
#
# ############################################################################
# Project: scripts (none)
# File...: xboot
# Created: Tuesday, 2020/02/04 - 00:07:38
# Author.: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Last Modified: Tuesday, 2023/10/03 - 07:28:08
# Modified By..: @fbnmtz, (fabiano.matoz@gmail.com)
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Version: 0.0.5.121
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~~·~·~·~·~·~·~·~
# Description: 
#  >
# ############################################################################
# HISTORY:
#

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
# shellcheck disable=SC1090,SC2154    
source ~/bin/xSHELL/init    
use args
# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
xrequirements qemu-system-x86_64 sudo fallocate rm
# _cmd_="sudo qemu-system-x86_64 -usb -usbdevice disk:<disk>  -boot menu=on  -m 512"
# _cmd_="sudo qemu-system-x86_64 -device piix3-usb-uhci -drive id=pendrive,file=<disk>,format=raw,if=none -device usb-storage,drive=pendrive  -boot menu=on  -m 512"
# _cmd_="sudo qemu-system-x86_64 -hdc /tmp/vda.img -hdb <disk>  -boot menu=on  -m 512"
_cmd_="sudo qemu-system-x86_64 -hdc /tmp/vda.img  -boot menu=on  -m <memory>"

# ~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~·~·~·~·~·~·~·~~·~·~·~·~·~    
xarg --id -d,--disk   --var disk     --desc "create disk to install"
xarg --id -i,--iso    --var iso+r    --desc "ISO file to boot"
xarg --id -u,--usb    --var usb+r    --desc "boot usb stick"      
xarg --id -s,--size   --var size+r   --desc "size of install disk"      
xarg --id -m,--memory --var memory+r --desc "set memory of new VM"      

xarg --header "use qemu to boot an iso/usb stick"
xarg --footer "* this script requires 'qemu-system-x86_64' and root privileges"
    
xrun --xreject-unknow --xrequire-one --xversionrc --xcolors "$@"    

[ -z "$size"   ] && size=5G
[ -n "$iso"    ] && _cmd_+=" -drive file=$iso,index=0,media=cdrom"
[ -n "$usb"    ] && _cmd_+=" -drive file=$usb,format=raw,index=0,media=disk"
if [ -n "$memory" ]; then
	_cmd_+=${_cmd_/<memory>/$memory}
else
	_cmd_+=${_cmd_/<memory>/512}
fi

if sudo fallocate -l $size /tmp/vda.img; then
	echo "$_cmd_"
	eval "$_cmd_"
	sudo rm /tmp/vda.img
else
	echo "Failed to create /tmp/vda.img! Check your disk space"
fi